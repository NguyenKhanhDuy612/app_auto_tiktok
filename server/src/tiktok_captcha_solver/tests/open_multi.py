import asyncio
import logging
import os
import random

from dotenv import load_dotenv
load_dotenv()

from playwright.async_api import async_playwright
from playwright_stealth import stealth_async, StealthConfig
import pytest


async def open_tiktkok_login(page, username, password) -> None:
    """ƒêƒÉng nh·∫≠p v√†o TikTok v·ªõi x·ª≠ l√Ω CAPTCHA."""
    await page.goto("https://www.tiktok.com/login/phone-or-email/email")
    await asyncio.sleep(5)

    # Nh·∫≠p t√™n ng∆∞·ªùi d√πng
    write_username = page.locator('xpath=//input[contains(@name,"username")]')
    await write_username.type(username)
    await asyncio.sleep(2)

    # Nh·∫≠p m·∫≠t kh·∫©u
    write_password = page.get_by_placeholder('Password')
    await write_password.type(password)
    await asyncio.sleep(2)

    # Nh·∫•n n√∫t ƒëƒÉng nh·∫≠p
    login_btn = await page.locator('//button[contains(@data-e2e,"login-button")]').click()
    await asyncio.sleep(5)

    print(f"‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng v·ªõi t√†i kho·∫£n: {username}")


async def open_account(playwright, username, password, position):
    """M·ªü m·ªôt tr√¨nh duy·ªát v√† ƒëƒÉng nh·∫≠p v√†o m·ªôt t√†i kho·∫£n TikTok."""
    print(f"üöÄ ƒêang m·ªü tr√¨nh duy·ªát cho t√†i kho·∫£n: {username} t·∫°i v·ªã tr√≠ {position}")

    # Kh·ªüi ch·∫°y tr√¨nh duy·ªát v·ªõi k√≠ch th∆∞·ªõc c·ª≠a s·ªï nh·ªè v√† v·ªã tr√≠ c·ª• th·ªÉ
    browser = await playwright.chromium.launch(
        headless=False,
        args=[
            f"--window-size=400,400",
            f"--window-position={position[0]},{position[1]}"
        ]
    )
    context = await browser.new_context(viewport={"width": 400, "height": 400})  # ƒê·∫∑t k√≠ch th∆∞·ªõc viewport
    page = await context.new_page()
    config = StealthConfig(navigator_languages=False, navigator_vendor=False, navigator_user_agent=False)
    await stealth_async(page, config)

    # ƒêƒÉng nh·∫≠p TikTok
    await open_tiktkok_login(page, username, password)

    # Gi·ªØ tr√¨nh duy·ªát m·ªü
    print(f"‚úÖ Tr√¨nh duy·ªát cho t√†i kho·∫£n {username} ƒëang m·ªü t·∫°i v·ªã tr√≠ {position}. Nh·∫•n Ctrl+C ƒë·ªÉ tho√°t.")
    await asyncio.sleep(10)  # Gi·ªØ tr√¨nh duy·ªát m·ªü trong 10 gi√¢y


async def open_multiple_accounts(accounts: list) -> None:
    """M·ªü ƒë·ªìng th·ªùi nhi·ªÅu tr√¨nh duy·ªát v√† ƒëƒÉng nh·∫≠p v√†o c√°c t√†i kho·∫£n TikTok."""
    async with async_playwright() as playwright:
        # T·ªça ƒë·ªô kh·ªüi t·∫°o cho c√°c c·ª≠a s·ªï
        positions = [
            (x * 400, y * 400) for y in range(5) for x in range(10)
        ]  # T·∫°o 50 v·ªã tr√≠ (10 h√†ng, 5 c·ªôt)
        tasks = [
            open_account(playwright, username, password, positions[i % len(positions)])
            for i, (username, password) in enumerate(accounts)
        ]
        await asyncio.gather(*tasks)  # Ch·∫°y ƒë·ªìng th·ªùi t·∫•t c·∫£ c√°c t√°c v·ª•


@pytest.mark.asyncio
async def test_open_multiple_accounts(caplog):
    """Ki·ªÉm tra ch·ª©c nƒÉng m·ªü v√† ƒëƒÉng nh·∫≠p nhi·ªÅu t√†i kho·∫£n."""
    caplog.set_level(logging.DEBUG)

    # Danh s√°ch t√†i kho·∫£n TikTok (username, password)
    accounts = [
        (f"username{i+1}", f"password{i+1}") for i in range(50)
    ]

    # M·ªü v√† ƒëƒÉng nh·∫≠p nhi·ªÅu t√†i kho·∫£n
    await open_multiple_accounts(accounts)


if __name__ == "__main__":
    # Nh·∫≠p s·ªë l∆∞·ª£ng t√†i kho·∫£n c·∫ßn m·ªü
    try:
        num_accounts = 50 # S·ªë l∆∞·ª£ng t√†i kho·∫£n m·∫∑c ƒë·ªãnh

    except ValueError:
        print("‚ùå Vui l√≤ng nh·∫≠p m·ªôt s·ªë h·ª£p l·ªá.")
        exit(1)

    # Danh s√°ch t√†i kho·∫£n TikTok (username, password)
    accounts = [
        (f"username{i+1}", f"password{i+1}") for i in range(50)
    ]

    # Ki·ªÉm tra s·ªë l∆∞·ª£ng t√†i kho·∫£n
    if num_accounts > len(accounts):
        print("‚ùå S·ªë l∆∞·ª£ng t√†i kho·∫£n kh√¥ng ƒë·ªß. Vui l√≤ng th√™m t√†i kho·∫£n v√†o danh s√°ch.")
        exit(1)

    # L·∫•y danh s√°ch t√†i kho·∫£n c·∫ßn m·ªü
    selected_accounts = accounts[:num_accounts]

    # Ch·∫°y ch∆∞∆°ng tr√¨nh
    asyncio.run(open_multiple_accounts(selected_accounts))